<div id="app">
    <a class="btn btn-danger" href="">Quiz beenden</a>
    <button class="btn btn-primary" @click="start">Quiz started</button>
    <router-view :status="status" :participants="participants" :startedBy="startedBy" :question="currentQuestion">
    </router-view>
</div>

<script type="module">

    const { createApp } = Vue
    const { createRouter, createWebHashHistory } = VueRouter

    import Lobby from "/vue/game/Lobby.js";
    import QuestionView from "/vue/game/QuestionView.js";


    const routes = [
        { path: '/', component: Lobby },
        { path: '/question', name: "question", component: QuestionView, props: true }
    ]

    const router = createRouter({
        history: createWebHashHistory(),
        routes,
    })

    // 5. Create and mount the root instance.
    const app = createApp(
        {
            data() {
                return {
                    participants: [],
                    status: 'idle',
                    isCreator: false,
                    sessionid: '',
                    sessionCreated: false,
                    currentQuestion: null
                }
            },
            mounted() {

                var ref = this

                io.socket.on('connect', function onConnect() {
                    console.log('This socket is now connected to the Sails server.');
                });

                var quizid = location.pathname.split('/')[3]

                // Subscribe to game events
                io.socket.on(
                    'joined',
                    function (participant) {
                        console.log(`A player has joined: ` + participant.fullName)
                        ref.participants.push(participant)
                    }
                )

                io.socket.on(
                    'nextQuestion',
                    function (question) {
                        ref.currentQuestion = question.question
                        ref.$router.push({ name: 'question' })
                        console.log(question)
                    }
                )

                io.socket.on(
                    'left',
                    function (participant) {
                        console.log('A player has left: ' + participant.fullName)
                        ref.participants.push(participant)
                    }
                )

                io.socket.on(
                    'state',
                    function (state) {
                        console.log(`Game status has changed: ` + state.status)
                        ref.status = state.status
                        if (!state.startedBy) {
                            ref.startedBy = state.startedBy
                        }
                    }
                )

                io.socket.post(
                    '/quiz/' + quizid + '/create',
                    function (resData, jwRes) {
                        console.log(resData)
                        ref.sessionCreated = true
                        ref.sessionid = resData.sessionid + ""
                    }
                )
            },
            methods: {
                start: function () {
                    console.log(`Starting game...`)
                    io.socket.post('/game/' + this.sessionid + '/start')
                },
                stop: function () {
                    console.log("Ending game...")
                }
            }
        }
    );
    app.use(router);
    app.mount('#app')
</script>